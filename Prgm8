#svd for dimensionality reduction
from numpy import array, diag,zeros
from sklearn.decomposition import TruncatedSVD 
from numpy.linalg import svd
A = array([
[1,2,3,4,5,6,7,8,9,10],
[11,12,13,14,15,16,17,18,19,20], [21,22,23,24,25,26,27,28,29,30]])
print("A = ",A)
print("")
U,s,VT = svd(A)
sigma=zeros((A.shape[0],A.shape[1]))
sigma[:A.shape[0],:A.shape[0]]=diag(s)
sigma=sigma[:,:2]
VT=VT[:2,:]
T=U.dot(sigma)
T=A.dot(VT.T)
print("Transform of the original matrix using svd is: ")
print(T)
print("")
svd=TruncatedSVD(2)
svd.fit(A)
result=svd.transform(A)
print("Transformed version : ")
print(result)
